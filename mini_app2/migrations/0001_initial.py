# Generated by Django 4.2.7 on 2023-11-26 11:58

import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.BigIntegerField(unique=True)),
                ('student_name', models.CharField(max_length=50)),
                ('student_aadhar', models.BigIntegerField(unique=True)),
                ('student_phone', models.CharField(max_length=20)),
                ('student_email', models.EmailField(max_length=254)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('student_dob', models.DateField()),
                ('student_address', models.TextField()),
                ('father_name', models.CharField(max_length=50)),
                ('father_phone', models.CharField(max_length=20)),
                ('mother_name', models.CharField(max_length=50)),
                ('mother_phone', models.CharField(max_length=20)),
                ('school_name', models.CharField(max_length=50)),
                ('section', models.CharField(max_length=10)),
                ('state_name', models.CharField(max_length=50)),
                ('city_name', models.CharField(max_length=50)),
                ('attendance', models.PositiveIntegerField(default=0)),
                ('marks', models.PositiveIntegerField()),
                ('fees', models.CharField(default='Unpaid', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OfficialsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=30, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()])),
                ('password', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
